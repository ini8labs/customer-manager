// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": [http,https],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bet/{id}": {
            "get": {
                "tags": ["Lottery APIs"],
                "parameters": [
                    {
                        "description": "enter a valid UserID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status ok",
                        "schema": {
                            "type": "string",
                            "example": "Status ok"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Lottery APIs"],
                "parameters": [
                    {
                        "description": "enter a valid BetUID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bet deleted successfully",
                        "schema": {
                            "type": "string",
                            "example": "Bet deleted successfully"
                        }
                    }
                }
            }
            
        },
        "/bet/history/{id}": {
            "get": {
                "tags": ["Lottery APIs"],
                "parameters": [
                    {
                        "description": "enter a valid EventUID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event history retrieved successfully",
                        "schema": {
                            "type": "string",
                            "example": "Event history retrieved successfully"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": ["User Information APIs"],
                "parameters": [
                    {
                        "description": "enter a valid UserID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "schema": {
                            "type": "string",
                            "example": "User information retrieved successfully"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["User Information APIs"],
                "parameters": [
                    {
                        "description": "enter a valid GovID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information deleted successfully",
                        "schema": {
                            "type": "string",
                            "example": "User information deleted successfully"
                        }
                    }
                }
            }
        },
        "/event": {
            "get": {
                "tags": ["Events APIs"],
                "responses": {
                    "200": {
                        "description": "Events retrieved",
                        "schema": {
                            "type": "string",
                            "example": "Events retrieved"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": ["User Information APIs"],
                "parameters": [
                {
                    "description": "Add user datails ",
                    "name": "info",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "Name":{
                                "type": "string",
                                "example": "Mohit"
                            },
                            "Phone": {
                                "type": "integer",
                                "example": 1234567890
                            },
                            "EMail": {
                                "type": "string",
                                "example": "mohit@gmail.com"
                            },
                            "GovID": {
                                "type": "string",
                                "example": "mohi123"
                            }
                        }
                    }
                }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string",
                    "example": "user info added successfully"
                        }
                    }
                }
            },
            "put": {
                "tags": ["User Information APIs"],
                "parameters": [
                {
                    "description": "Update user datails ",
                    "name": "info",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "UID":{
                                "type": "string",
                                "example": "644f3e829684b2aaba49a1e2"
                            },
                            "Key": {
                                "type": "string",
                                "example": "name/e_mail/gov_id"
                            },
                            "Value": {
                                "type": "string",
                                "example": "MohitChanged"
                            }
                        }
                    }
                }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string",
                    "example": "user info updated successfully"
                        }
                    }
                }
            }
        },
        "/bet": {
            "post": {
                "tags": ["Lottery APIs"],
                "parameters": [
                {
                    "description": "Add new bet ",
                    "name": "info",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "UserID":{
                                "type": "string",
                                "example": "6443a1e99c150ed9e52c5bdd"
                            },
                            "EventUID": {
                                "type": "string",
                                "example": "6448e27a01d112844eaeb46d"
                            },
                            "Amount": {
                                "type": "int",
                                "example": "1000"
                            },
                            "BetNumbers": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": [1,2,3]
                            }
                        }
                    }
                }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string",
                    "example": "user info added successfully"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Lottery APIs"],
                "parameters": [
                {
                    "description": "Update user bet",
                    "name": "info",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "BetUID":{
                                "type": "string",
                                "example": "644a30a72a4bc64af8c80da5"
                            },
                            "BetNumbers": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": [1,2,3]
                            },
                            "Amount": {
                                "type": "integer",
                                "example": 5000
                            }
                        }
                    }
                }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string",
                    "example": "user bet updated successfully"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "My API",
	Description:      "This is Lottery Project API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
